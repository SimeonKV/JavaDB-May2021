00. Create Database

You now know how to create database using the GUI of the Workbench. 
Now it's time to create it using SQL queries. In that task (and the several following it)
you will be required to create the database from the previous exercise using only SQL queries. 
Firstly, just create new database named minions.


QUERY ->>> 
CREATE DATABASE `minions`;




01.Create Tables

In the newly created database Minions add table minions (id, name, age). 
Then add new table towns (town_id, name). Set id and town_id columns of both tables to be primary key as constraint, 
id's must be auto increment. Submit yours create table queries in Judge together for both tables (one after another separated by ";") 
as Run queries & check DB.


QUERY ->>> 
USE `minions`;

CREATE TABLE `minions`(
`id` INT AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(25) NOT NULL,
`age` INT 
);


CREATE TABLE `towns`(
`town_id` INT AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(25) NOT NULL
);


02.Alter Minions Table

Before continuing with the next assignments, rename the town_id to id using Workbench's GUI.Do not submit this query on the Judge System.
Change the structure of the Minions table to have new column town_id that would be of the same type 
as the id column of towns table. Add new constraint that makes town_id foreign key and references to id column of towns table.
Submit your create table query in Judge as MySQL run skeleton, run queries & check DB


QUERY ->>>

//REMOVES THE AUTO INCREMENT EXTRA
ALTER TABLE `towns` MODIFY COLUMN `town_id` INT;
//DROPS THE PRIMARY KEY
ALTER TABLE `towns` DROP PRIMARY KEY;
//RENAMES THE FORMER PRIMARY KEY COLUM FRO `town_id` TO `id`
ALTER TABLE `towns` CHANGE COLUMN `town_id` `id` INT;
//MAKES THE NEWLY NAMED COULMN `id` A PRIMARY KEY
ALTER TABLE `towns` ADD PRIMARY KEY(`id`);
//THEN ADDS THE AUTO_INCREMENT EXTRA TO THE PRIMARY KEY COLUMN
ALTER TABLE `towns` MODIFY COLUMN `id` INT AUTO_INCREMENT;

ALTER TABLE `minions`
ADD COLUMN `town_id` INT;

ALTER TABLE `minions`
ADD FOREIGN KEY(`town_id`) REFERENCES `towns`(`id`);

ALTER TABLE `minions`
MODIFY COLUMN `town_id` INT NOT NULL;

03.Insert Records in Both Tables

Populate both tables with sample records given in the table below.
minions		towns
id	name	age	town_id		id	name
1	Kevin	22	1		1	Sofia
2	Bob	15	3		2	Plovdiv
3	Steward	NULL	2		3	Varna

QUERY ->>>

INSERT INTO towns (id,`name`) VALUES
(1,'Sofia'),
(2,'Plovdiv'),
(3,'Varna');

INSERT INTO minions (id,`name`, age, town_id) VALUES
(1,'Kevin' , 22, 1),
(2,'Bob',15, 3),
(3, 'Steward',NULL, 2);


04.Truncate Table Minions
Delete all the data from the minions table using SQL query.
Submit your query in Judge as Run skeleton, run queries & check DB.

QUERY ->>>

TRUNCATE TABLE `minions`;

5.Drop All Tables

Delete all tables from the minions database using SQL query. 
Submit your query in Judge as Run skeleton, run queries & check DB.


QUERY ->>>

DROP TABLE `minions`;
DROP TABLE `towns`;

06.Create Table People

Using SQL query create table "people" with columns:
•	id – unique number for every person there will be no more than 231-1people. (Auto incremented)
•	name – full name of the person will be no more than 200 Unicode characters. (Not null)
•	picture – image with size up to 2 MB. (Allow nulls)
•	height –  In meters. Real number precise up to 2 digits after floating point. (Allow nulls)
•	weight –  In kilograms. Real number precise up to 2 digits after floating point. (Allow nulls)
•	gender – Possible states are m or f. (Not null)
•	birthdate – (Not null)
•	biography – detailed biography of the person it can contain max allowed Unicode characters. (Allow nulls)
Make id primary key. Populate the table with 5 records.  Submit your CREATE and INSERT statements in Judge as Run queries & check DB.

QUERY ->>>

CREATE TABLE people(
`id` INT AUTO_INCREMENT PRIMARY KEY,
`name` VARCHAR(200) NOT NULL,
`picture` BLOB,
`height` DECIMAL(3,2),
`weight` DECIMAL(5,2),
`gender` ENUM('m','f') NOT NULL,
`birthdate` DATE NOT NULL,
`biography` TEXT
);

INSERT INTO `people`(`id`,`name`,`picture`,`height`,`weight`,`gender`,`birthdate`,`biography`)
VALUES(1,"Maria",NULL,1.73,69.00,'f','1993-02-04',"I am Maria from Bulgaria"),
(2,"Mario",NULL,1.78,70.14,'m','1991-09-14',"I am Mario from Bulgaria"),
(3,"Georgi",NULL,1.83,69.00,'m','1994-02-24',"I am Georgi from Bulgaria"),
(4,"Martina",NULL,1.67,60.10,'f','1993-07-01',"I am Martina from Bulgaria"),
(5,"Dimitar",NULL,1.79,69.00,'m','1990-12-05',"I am Dimitar from Bulgaria");


07. Create Table Users

Using SQL query create table users with columns:
•	id – unique number for every user. There will be no more than 263-1 users. (Auto incremented)
•	username – unique identifier of the user will be no more than 30 characters (non Unicode). (Required)
•	password – password will be no longer than 26 characters (non Unicode). (Required)
•	profile_picture – image with size up to 900 KB. 
•	last_login_time
•	is_deleted – shows if the user deleted his/her profile. Possible states are true or false.
Make id primary key. Populate the table with 5 records. Submit your CREATE and INSERT statements.
Submit your CREATE and INSERT statements as Run queries & check DB.

QUERY ->>>

CREATE TABLE `users`(
`id` INT AUTO_INCREMENT PRIMARY KEY,
`username` VARCHAR(30) UNIQUE NOT NULL,
`password` VARCHAR(26) NOT NULL,
`profile_picture` BLOB,
`last_login_time` timestamp,
`is_deleted` BOOLEAN
);

INSERT INTO `users`(`id`,`username`,`password`,`profile_picture`,`last_login_time`,`is_deleted`)
VALUES(1,'master_force','secretPass',NULL,'2021-02-25',TRUE),
(2,'fire_lion','secretPass',NULL,'2021-05-29',FALSE),
(3,'homiee','noSecretPass',NULL,'2021-05-25',FALSE),
(4,'HelloWorld','worldHello',NULL,'2021-02-27',False),
(5,'I_Like_Java','BigJAVA',NULL,'2021-02-20',TRUE);

SELECT * FROM `users`;


